# Generated by Django 4.0 on 2022-01-20 09:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_description', models.CharField(help_text='Use singular form.', max_length=50, verbose_name='Category description')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=10, verbose_name='Status')),
            ],
            options={
                'ordering': ['category_description'],
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplier_name', models.CharField(max_length=50, verbose_name='Supplier Name')),
                ('address', models.CharField(max_length=250, verbose_name='Address')),
                ('contact_person', models.CharField(max_length=50, verbose_name='Contact Person')),
                ('contact_info', models.CharField(blank=True, max_length=50, null=True, verbose_name='Contact Information')),
                ('email', models.EmailField(blank=True, max_length=100, null=True, verbose_name='Email')),
                ('tax_class', models.CharField(blank=True, choices=[('Taxable', 'Taxable'), ('Non-Taxable', 'Non-Taxable'), ('Tax Exempt', 'Tax Exempt')], default=None, max_length=50, null=True, verbose_name='Tax Classification')),
                ('tin', models.CharField(blank=True, default=None, max_length=20, null=True, verbose_name='Tax Identification Number')),
                ('less_vat', models.BooleanField(default=False, verbose_name='Supplier deducts VAT from total')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('activated_at', models.DateTimeField(null=True, verbose_name='Activated at')),
                ('last_updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Last updated at')),
                ('cancelled_at', models.DateTimeField(default=None, null=True, verbose_name='Cancelled at')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=10, verbose_name='Status')),
            ],
            options={
                'ordering': ['supplier_name'],
            },
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uom_description', models.CharField(help_text='Use singular form.', max_length=50, verbose_name='Unit of measure')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=10, verbose_name='Status')),
            ],
            options={
                'ordering': ['uom_description'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('barcode', models.CharField(max_length=50, unique=True, verbose_name='Barcode')),
                ('full_description', models.CharField(max_length=250, unique=True, verbose_name='Product description')),
                ('short_name', models.CharField(help_text='This will appear in the receipt', max_length=50, unique=True, verbose_name='Short name')),
                ('reorder_point', models.PositiveIntegerField(default=20, help_text="The level (quantity) when you will need to place an order so you won't run out of stock.", verbose_name='Reorder Point')),
                ('ceiling_qty', models.PositiveIntegerField(default=50, help_text='The maximum quantity you should keep in inventory in order to meet your demand and avoid overstocking.', verbose_name='Ceiling Quantity')),
                ('suggested_retail_price', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=11, null=True, verbose_name='Suggested Retail Price')),
                ('selling_price', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True, verbose_name='Selling Price')),
                ('wholesale_price', models.DecimalField(blank=True, decimal_places=2, max_digits=11, null=True, verbose_name='Wholesale Price')),
                ('wholesale_qty', models.IntegerField(default=0, help_text='Quantity to consider as wholesale', verbose_name='Wholesale Quantity')),
                ('tax_type', models.CharField(choices=[('V', 'VAT'), ('X', 'VAT Exempt'), ('Z', 'Zero Rated')], default='V', max_length=15, verbose_name='Tax Type')),
                ('is_consignment', models.BooleanField(default=False, help_text='Is this a consigned product?', verbose_name='Consigned product?')),
                ('is_buyer_info_needed', models.BooleanField(default=False, help_text="Do you need to get the buyer's information upon purchase?", verbose_name="Buyer's information needed?")),
                ('other_info', models.TextField(blank=True, null=True, verbose_name='Other Information')),
                ('for_price_review', models.BooleanField(default=False, verbose_name='For price review?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('price_updated_on', models.DateField(default=None, null=True, verbose_name='Price updated on')),
                ('cancelled_at', models.DateTimeField(default=None, null=True, verbose_name='Cancelled at')),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('CANCELLED', 'Cancelled')], default='ACTIVE', max_length=10, verbose_name='Status')),
                ('price_review', models.BooleanField(default=False, verbose_name='For price review?')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='fm.category', verbose_name='Category')),
                ('suppliers', models.ManyToManyField(to='fm.Supplier')),
                ('uom', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='fm.unitofmeasure', verbose_name='Unit of Measurement')),
            ],
            options={
                'ordering': ['full_description'],
            },
        ),
    ]
